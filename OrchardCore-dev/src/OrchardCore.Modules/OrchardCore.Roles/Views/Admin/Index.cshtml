@model OrchardCore.Roles.ViewModels.RolesViewModel

<div class="row">
    <div class="form-group col mb-n1">
        <h1>@RenderTitleSegments(T["Roles"])</h1>
    </div>
    <div class="form-group col mb-n1">
        <div class="dropdown float-right order-md-1">
            <a asp-route-action="Create" class="btn btn-primary float-right" role="button">@T["Add Role"]</a>
        </div>
    </div>
</div>
<form autocomplete="off">
    <div class="card mb-3">
        <div class="card-body bg-light p-3">
            <div class="form-group mb-n1">
                <div class="input-group input-group-sm w-lg-50">
                    <div class="input-group-prepend">
                        <span class="input-group-text bg-secondary text-light">@T["Filter"]</span>
                    </div>
                    <input id="search-box" class="form-control mr-sm-2" type="text" placeholder="@T["Search"]" autofocus="autofocus">
                </div>
            </div>
        </div>
    </div>
</form>

<form asp-action="Index">
    <ul id="roles" class="list-group">
        @for (var i = 0; i < Model.RoleEntries.Count; i++)
        {
            <li class="list-group-item" data-role="@Model.RoleEntries[i].Name">
                <div class="properties">
                    <div class="related">
                        <a class="edit btn btn-primary btn-sm" role="button" asp-action="Edit" asp-route-id="@Model.RoleEntries[i].Name">@T["Edit"]</a>
                        <a class="delete btn btn-danger btn-sm" asp-route-id="@Model.RoleEntries[i].Name" role="button" asp-action="Delete" itemprop="UnsafeUrl RemoveUrl">@T["Delete"]</a>
                    </div>
                    @*<input asp-for="RoleEntries[i].Selected" type="checkbox">*@
                    @Model.RoleEntries[i].Name
                </div>
            </li>
        }
    </ul>
    <div id="list-alert" class="alert alert-info d-none" role="alert">
        @T["<strong>Nothing here!</strong> Your search returned no results."]
    </div>
</form>

<script at="Foot" type="text/javascript">
    $(function () {
        var searchBox = $('#search-box');

        // On Enter, edit the role if there is a single one
        searchBox.keypress(function (event) {
            if (event.which == 13) {

                // Edit the role if there is a single filtered element
                var visible = $('#roles > li:visible');
                if (visible.length == 1) {
                    window.location = visible.find('.edit').attr('href');
                }
                return false;
            }
        });

        // On each keypress filter the list of roles
        searchBox.keyup(function (e) {
            var search = $(this).val().toLowerCase();
            if (e.keyCode == 27 || search == '') {
                searchBox.val('');
                $('#roles > li').toggle(true);
            }
            else {
                // On ESC, clear the search box and display all roles
                $('#roles > li').each(function () {
                    var role = $(this).data('role').toLowerCase();
                    var found = role.indexOf(search) > -1;
                    $(this).toggle(found);
                });

                // We display an alert if a search is not found
                var visible = $('#roles > li:visible');
                if (visible.length == 0) {
                    $('#list-alert').removeClass("d-none");
                }
                else {
                    $('#list-alert').addClass("d-none");
                }
            }
        });
    })
</script>